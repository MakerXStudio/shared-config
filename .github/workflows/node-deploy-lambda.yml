on:
  workflow_call:
    inputs:
      workingDirectory:
        required: false
        type: string
        default: ./deploy
      infrastructureArtifactName:
        required: false
        type: string
        default: infrastructure
      lambdaArtifactName:
        required: false
        type: string
        default: node-app
      awsDefaultRegion:
        required: true
        type: string
        description: "AWS region to deploy to"
      githubEnvironment:
        required: true
        type: string
      awsEnvironment:
        required: true
        type: string
    secrets:
      CDK_DEFAULT_ACCOUNT:
        required: true
        description: "CDK Default Account"
      AWS_ACCESS_KEY_ID:
        required: true
        description: "AWS Access Key ID"
      AWS_ACCESS_KEY_SECRET:
        required: true
        description: "AWS Access Key Secret"

jobs:
  build-cdk:
    runs-on: ubuntu-latest
    environment: ${{ inputs.githubEnvironment }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ inputs.workingDirectory }}/artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ inputs.awsDefaultRegion }}

      - name: Unzip infrastructure folder
        run: unzip -q ${{ inputs.workingDirectory }}/artifacts/${{ inputs.infrastructureArtifactName }}/${{ inputs.infrastructureArtifactName }}.zip -d ${{ inputs.workingDirectory }}/infrastructure
        shell: bash

      - name: Unzip app folder
        run: unzip -q ${{ inputs.workingDirectory }}/artifacts/${{ inputs.lambdaArtifactName }}/${{ inputs.lambdaArtifactName }}.zip -d ${{ inputs.workingDirectory }}/build
        shell: bash

      # Unfortunately, the symlinks in node_modules/.bin aren't retained as part of artifact copying so we need to reconstruct them
      - name: Fix symlinks
        shell: bash
        run: |
          ln -s ../aws-cdk/bin/cdk node_modules/.bin/cdk -f
          ln -s ../cross-env/src/bin/cross-env-shell.js node_modules/.bin/cross-env-shell -f
          chmod -R a+x node_modules
        working-directory: ${{ inputs.workingDirectory }}/infrastructure

      - name: CDK bootstrap
        shell: bash
        run: npm run bootstrap
        working-directory: ${{ inputs.workingDirectory }}/infrastructure
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          AWS_DEFAULT_REGION: ${{ inputs.awsDefaultRegion }}
          DEPLOYMENT_ENVIRONMENT: ${{ inputs.awsEnvironment }}

      - name: CDK synthesize
        shell: bash
        run: npm run synth
        working-directory: ${{ inputs.workingDirectory }}/infrastructure

      - name: CDK diff
        shell: bash
        run: npm run diff
        working-directory: ${{ inputs.workingDirectory }}/infrastructure

      - name: CDK deploy infra
        shell: bash
        run: npm run deploy-infra
        working-directory: ${{ inputs.workingDirectory }}/infrastructure

      - name: Set secrets
        shell: bash
        run: npm run set-secrets
        working-directory: ${{ inputs.workingDirectory }}/infrastructure
