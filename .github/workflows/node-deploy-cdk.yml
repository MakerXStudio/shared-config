on:
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: 16.x
      aws-region:
        type: string
        required: true
      infrastructure-artifact-name:
        type: string
        default: infrastructure
        required: false
      app-artifact-name:
        type: string
        default: node-app
        required: false
      environment-name:
        required: false
        default: 'Development'
        type: string
      deployment-environment:
        required: false
        default: 'dev'
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  deploy:
    name: ${{ inputs.environment-name }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment-name }}

    defaults:
      run:
        shell: bash

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - run: unzip -q ./artifacts/${{ inputs.infrastructure-artifact-name }}/${{ inputs.infrastructure-artifact-name }}.zip -d ./infrastructure
      shell: bash

    - run: unzip -q ./artifacts/${{ inputs.app-artifact-name }}/${{ inputs.app-artifact-name }}.zip -d ./build
      shell: bash

    # Unfortunately, the symlinks in node_modules/.bin aren't retained as part of artifact copying so we need to reconstruct them
    - name: Fix infrastructure symlinks
      run: |
        ln -s ../aws-cdk/bin/cdk node_modules/.bin/cdk -f
        ln -s ../cross-env/src/bin/cross-env-shell.js node_modules/.bin/cross-env-shell -f
        chmod -R a+x node_modules
      working-directory: ./infrastructure

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: CDK bootstrap
      run: npm run bootstrap
      working-directory: ./infrastructure

    - name: CDK synthesize
      run: npm run synth
      working-directory: ./infrastructure

    - name: CDK diff
      run: npm run diff
      working-directory: ./infrastructure

    - name: CDK deploy infra
      run: npm run deploy-infra
      working-directory: ./infrastructure

    - name: Set secrets
      run: npm run set-secrets
      working-directory: ./infrastructure
