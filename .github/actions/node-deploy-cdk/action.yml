name: Deploy CDK
description: Deploy CDK
inputs:
  node-version:
    description: Node.js version to use
    required: false
    default: 16.x
  aws-access-key-id:
    description: AWS Access Key ID
    required: true
  aws-secret-access-key:
    description: AWS Access Key Secret
    required: true
  aws-region:
    description: AWS region to deploy to
    required: true
  infrastructure-artifact-name:
    description: Name of infrastructure artifact
    default: infrastructure
    required: false
  app-artifact-name:
    description: Name of app artifact
    default: node-app
    required: false
  app-build-folder:
    description: Subfolder to which the app artifact is unzipped to
    required: false
    default: build

runs:
  using: composite
  steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Unzip infrastructure folder
      run: unzip -q ./artifacts/${{ inputs.infrastructure-artifact-name }}/${{ inputs.infrastructure-artifact-name }}.zip -d ./${{ inputs.infrastructure-artifact-name }}
      shell: bash

    - name: Unzip app folder
      run: |
        mkdir ./${{ inputs.app-artifact-name }}/${{ inputs.app-build-folder }}
        unzip -q ./artifacts/${{ inputs.app-artifact-name }}/${{ inputs.app-artifact-name }}.zip -d ./${{ inputs.app-artifact-name }}/${{ inputs.app-build-folder }}
      shell: bash

    # Unfortunately, the symlinks in node_modules/.bin aren't retained as part of artifact copying so we need to reconstruct them
    - name: Fix symlinks
      shell: bash
      run: |
        ln -s ../aws-cdk/bin/cdk node_modules/.bin/cdk -f
        ln -s ../cross-env/src/bin/cross-env-shell.js node_modules/.bin/cross-env-shell -f
        chmod -R a+x node_modules
      working-directory: ./${{ inputs.infrastructure-artifact-name }}

    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: CDK bootstrap
      shell: bash
      run: npm run bootstrap
      working-directory: ./${{ inputs.infrastructure-artifact-name }}

    - name: CDK synthesize
      shell: bash
      run: npm run synth
      working-directory: ./${{ inputs.infrastructure-artifact-name }}

    - name: CDK diff
      shell: bash
      run: npm run diff
      working-directory: ./${{ inputs.infrastructure-artifact-name }}

    - name: CDK deploy infra
      shell: bash
      run: npm run deploy-infra
      working-directory: ./${{ inputs.infrastructure-artifact-name }}

    - name: Set secrets
      shell: bash
      run: npm run set-secrets
      working-directory: ./${{ inputs.infrastructure-artifact-name }}
